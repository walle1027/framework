<?xml version="1.0" encoding="utf-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="org.loed.framework">
		<!--<context:include-filter type="annotation"-->
		<!--expression="org.aspectj.lang.annotation.Aspect"/>-->
	</context:component-scan>
	<aop:aspectj-autoproxy/>
	<!-- 指定数据库配置信息 -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:env.properties</value>
			</list>
		</property>
	</bean>
	<bean id="mapper" class="org.loed.framework.common.mapping.MapperFactoryBean">
		<property name="configFiles">
			<list>
				<value>classpath*:/pers/yangtao/**/mapping/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- c3p0数据源配置 -->
	<bean id="dataSource"
		  class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<!--数据库连接驱动类-->
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<!--数据库连接URL-->
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<!--数据库用户名-->
		<property name="user" value="${jdbc.username}"/>
		<!--数据库密码-->
		<property name="password" value="${jdbc.password}"/>
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
		<!--c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能  通过多线程实现多个操作同时被执行。Default: 3-->
		<property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
		<!--向数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
		<!--连接关闭时默认将所有未提交的操作回滚。Default: false -->
		<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
		<!--用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
		<property name="maxStatements" value="${c3p0.maxStatements}"/>
		<!--定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0  -->
		<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}"/>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
	</bean>
	<!--获取序列的dao-->
	<bean id="sequenceDao" class="org.loed.framework.common.sequence.impl.JdbcSynchronizer">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 业务层公用的AOP组件 -->
	<bean id="serviceAop" class="org.loed.framework.aop.ServiceAop"/>

	<!-- 配置事务切面Bean,指定事务管理器 -->
	<aop:config>
		<!-- 配置一个切入点，匹配所有Service包下的类
			执行的所有方法 -->
		<aop:pointcut id="servicePointcut" expression="execution(* org.loed.framework..*(..))"/>
		<!-- 配置一个记录日志的切面Bean优先级为0 -->
		<aop:aspect id="exceptionAspect" ref="serviceAop" order="0">
			<aop:around pointcut-ref="servicePointcut" method="execute"/>
		</aop:aspect>
	</aop:config>
</beans>
